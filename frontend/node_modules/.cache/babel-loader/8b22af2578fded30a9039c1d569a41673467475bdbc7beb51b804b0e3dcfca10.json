{"ast":null,"code":"import myKey from './KhaltiKey';\nimport axios from 'axios';\nconst verifyPayment = data => {\n  axios.post('api/orders/verify-payment', {\n    data\n  }).then(response => {\n    console.log(response.data); // verify status\n  }).catch(error => {\n    console.log(error.message);\n  });\n};\nconst config = {\n  publicKey: myKey.publicTestKey,\n  productIdentity: '1231421223',\n  productName: ' ',\n  productUrl: 'http://localhost:3000',\n  eventHandler: {\n    onSuccess(payload) {\n      const data = {\n        token: payload.token,\n        amount: payload.amount\n      };\n\n      // axios\n      //   .get(\n      //     `https://meslaforum.herokuapp.com/khalti/${data.token}/${data.amount}/${myKey.secretKey}`\n      //   )\n      //   .then((response) => {\n      //     localStorage.setItem('paid', JSON.stringify(true));\n      //     localStorage.setItem('paymentResult', JSON.stringify(payload));\n      //     verifyPayment(data);\n      //     window.location.reload();\n      //   })\n      //   .catch((error) => {\n      //     console.log(error);\n      //   });\n    },\n\n    onError(error) {\n      console.log(error);\n    },\n    onClose() {\n      console.log('widget is closing');\n    }\n  },\n  paymentPreference: ['KHALTI', 'EBANKING', 'MOBILE_BANKING', 'CONNECT_IPS', 'SCT']\n};\nexport default config;","map":{"version":3,"names":["myKey","axios","verifyPayment","data","post","then","response","console","log","catch","error","message","config","publicKey","publicTestKey","productIdentity","productName","productUrl","eventHandler","onSuccess","payload","token","amount","onError","onClose","paymentPreference"],"sources":["D:/fff/Fyp/frontend/src/components/Khalti/KhaltiConfig.js"],"sourcesContent":["import myKey from './KhaltiKey';\r\nimport axios from 'axios';\r\n\r\n\r\nconst verifyPayment = (data) => {\r\n  axios\r\n    .post('api/orders/verify-payment', { data })\r\n    .then((response) => {\r\n      console.log(response.data); // verify status\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.message);\r\n    });\r\n};\r\n\r\nconst config = {\r\n  publicKey: myKey.publicTestKey,\r\n  productIdentity: '1231421223',\r\n  productName: ' ',\r\n  productUrl: 'http://localhost:3000',\r\n  eventHandler: {\r\n    onSuccess(payload) {\r\n      const data = {\r\n        token: payload.token,\r\n        amount: payload.amount,\r\n      };\r\n\r\n      // axios\r\n      //   .get(\r\n      //     `https://meslaforum.herokuapp.com/khalti/${data.token}/${data.amount}/${myKey.secretKey}`\r\n      //   )\r\n      //   .then((response) => {\r\n      //     localStorage.setItem('paid', JSON.stringify(true));\r\n      //     localStorage.setItem('paymentResult', JSON.stringify(payload));\r\n      //     verifyPayment(data);\r\n      //     window.location.reload();\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     console.log(error);\r\n      //   });\r\n    },\r\n\r\n    onError(error) {\r\n      console.log(error);\r\n    },\r\n    onClose() {\r\n      console.log('widget is closing');\r\n    },\r\n  },\r\n  paymentPreference: [\r\n    'KHALTI',\r\n    'EBANKING',\r\n    'MOBILE_BANKING',\r\n    'CONNECT_IPS',\r\n    'SCT',\r\n  ],\r\n};\r\n\r\nexport default config;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC9BF,KAAK,CACFG,IAAI,CAAC,2BAA2B,EAAE;IAAED;EAAK,CAAC,CAAC,CAC3CE,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAEb,KAAK,CAACc,aAAa;EAC9BC,eAAe,EAAE,YAAY;EAC7BC,WAAW,EAAE,GAAG;EAChBC,UAAU,EAAE,uBAAuB;EACnCC,YAAY,EAAE;IACZC,SAASA,CAACC,OAAO,EAAE;MACjB,MAAMjB,IAAI,GAAG;QACXkB,KAAK,EAAED,OAAO,CAACC,KAAK;QACpBC,MAAM,EAAEF,OAAO,CAACE;MAClB,CAAC;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IAEDC,OAAOA,CAACb,KAAK,EAAE;MACbH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC;IACDc,OAAOA,CAAA,EAAG;MACRjB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF,CAAC;EACDiB,iBAAiB,EAAE,CACjB,QAAQ,EACR,UAAU,EACV,gBAAgB,EAChB,aAAa,EACb,KAAK;AAET,CAAC;AAED,eAAeb,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}