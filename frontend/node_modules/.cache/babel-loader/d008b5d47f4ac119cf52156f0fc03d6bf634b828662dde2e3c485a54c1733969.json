{"ast":null,"code":"var _jsxFileName = \"D:\\\\fff\\\\Fyp\\\\frontend\\\\src\\\\screens\\\\OtpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordScreen = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const submitHandler = e => {\n    e.preventDefault();\n    // TODO: Send password reset email using Nodemailer\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"primary\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_s(ResetPasswordScreen, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["React","useRef","useState","Link","useHistory","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","jsxDEV","_jsxDEV","ResetPasswordScreen","_s","email","setEmail","submitHandler","e","preventDefault","onSubmit","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","target","variant","_c","$RefreshReg$"],"sources":["D:/fff/Fyp/frontend/src/screens/OtpForm.js"],"sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst ResetPasswordScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      // TODO: Send password reset email using Nodemailer\r\n    };\r\n  \r\n    return (\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n  \r\n        <Button type='submit' variant='primary'>\r\n          Reset Password\r\n        </Button>\r\n      </Form>\r\n    );\r\n  };\r\n  \r\n  export default ResetPasswordScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMkB,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB;EACF,CAAC;;EAED,oBACEP,OAAA,CAACV,IAAI;IAACkB,QAAQ,EAAEH,aAAc;IAAAI,QAAA,gBAC5BT,OAAA,CAACV,IAAI,CAACoB,KAAK;MAACC,SAAS,EAAC,OAAO;MAAAF,QAAA,gBAC3BT,OAAA,CAACV,IAAI,CAACsB,KAAK;QAAAH,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACtChB,OAAA,CAACV,IAAI,CAAC2B,OAAO;QACXC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEjB,KAAM;QACbkB,QAAQ,EAAGf,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eAEbhB,OAAA,CAACT,MAAM;MAAC2B,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAC,SAAS;MAAAd,QAAA,EAAC;IAExC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX,CAAC;AAACd,EAAA,CAzBED,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AA2BvB,eAAeA,mBAAmB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}