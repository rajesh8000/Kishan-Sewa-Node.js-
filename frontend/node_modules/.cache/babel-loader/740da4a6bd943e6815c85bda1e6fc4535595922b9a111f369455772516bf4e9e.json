{"ast":null,"code":"import myKey from './KhaltiKey';\nimport axios from 'axios';\nimport { toast } from \"react-hot-toast\";\nconst config = {\n  publicKey: myKey.publicTestKey,\n  productIdentity: '1231421223',\n  productName: 'Tomatooes',\n  productUrl: 'http://localhost:3000',\n  orderId: '',\n  eventHandler: {\n    onSuccess(payload) {\n      const data = {\n        token: payload.token,\n        amount: payload.amount\n      };\n      axios.post('http://localhost:5000/api/orders/verifypayment', data).then(response => {\n        console.log(response.data); // verify status\n\n        // Update the database if the payment was successful\n        if (response.data.status === 'Completed') {\n          const orderId = response.data.order._id;\n          axios.get(`https://meslaforum.herokuapp.com/khalti/${data.token}/${data.amount}/${myKey.secretKey}`).then(response => {\n            localStorage.setItem(\"paid\", JSON.stringify(true));\n            localStorage.setItem(\"paymentResult\", JSON.stringify(payload));\n            window.location.reload();\n          }).catch(error => {\n            console.log(error.message);\n          });\n        }\n      }).catch(error => {\n        console.log(error.message);\n      });\n      toast.success(\"Order Placed Successfully\");\n    },\n    onError(error) {\n      console.log(error);\n    },\n    onClose() {\n      window.location.href = 'http://localhost:3000/';\n    }\n  },\n  paymentPreference: ['KHALTI', 'EBANKING', 'MOBILE_BANKING', 'CONNECT_IPS', 'SCT']\n};\nexport default config;","map":{"version":3,"names":["myKey","axios","toast","config","publicKey","publicTestKey","productIdentity","productName","productUrl","orderId","eventHandler","onSuccess","payload","data","token","amount","post","then","response","console","log","status","order","_id","get","secretKey","localStorage","setItem","JSON","stringify","window","location","reload","catch","error","message","success","onError","onClose","href","paymentPreference"],"sources":["D:/fff/Fyp/frontend/src/components/Khalti/KhaltiConfig.js"],"sourcesContent":["import myKey from './KhaltiKey';\r\nimport axios from 'axios';\r\nimport { toast } from \"react-hot-toast\";\r\n\r\n\r\n\r\n\r\nconst config = {\r\n  publicKey: myKey.publicTestKey,\r\n  productIdentity: '1231421223',\r\n  productName: 'Tomatooes',\r\n  productUrl: 'http://localhost:3000',\r\n  orderId:'',\r\n  eventHandler: {\r\n    \r\n    onSuccess(payload) {\r\n      const data = {\r\n        token: payload.token,\r\n        amount: payload.amount,    \r\n        \r\n      };\r\n     \r\n      \r\n\r\naxios.post('http://localhost:5000/api/orders/verifypayment',data )\r\n     .then((response) => {\r\n    console.log(response.data); // verify status\r\n\r\n\r\n   // Update the database if the payment was successful\r\n   if (response.data.status === 'Completed') {\r\n    const orderId = response.data.order._id;\r\n\r\n   \r\n    axios.get( `https://meslaforum.herokuapp.com/khalti/${data.token}/${data.amount}/${myKey.secretKey}`)\r\n    .then((response) => {\r\n      localStorage.setItem(\"paid\", JSON.stringify(true))\r\n      localStorage.setItem(\"paymentResult\", JSON.stringify(payload))\r\n      window.location.reload()\r\n    })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n})\r\n    \r\n  .catch((error) => {\r\n    console.log(error.message);\r\n  });\r\n\r\n  toast.success(\"Order Placed Successfully\");\r\n    },\r\n\r\n    onError(error) {\r\n      console.log(error);\r\n    },\r\n    onClose() {\r\n      window.location.href = 'http://localhost:3000/';\r\n    },\r\n  },\r\n  paymentPreference: [\r\n    'KHALTI',\r\n    'EBANKING',\r\n    'MOBILE_BANKING',\r\n    'CONNECT_IPS',\r\n    'SCT',\r\n  ],\r\n};\r\n\r\nexport default config;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAKvC,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAEJ,KAAK,CAACK,aAAa;EAC9BC,eAAe,EAAE,YAAY;EAC7BC,WAAW,EAAE,WAAW;EACxBC,UAAU,EAAE,uBAAuB;EACnCC,OAAO,EAAC,EAAE;EACVC,YAAY,EAAE;IAEZC,SAASA,CAACC,OAAO,EAAE;MACjB,MAAMC,IAAI,GAAG;QACXC,KAAK,EAAEF,OAAO,CAACE,KAAK;QACpBC,MAAM,EAAEH,OAAO,CAACG;MAElB,CAAC;MAIPd,KAAK,CAACe,IAAI,CAAC,gDAAgD,EAACH,IAAI,CAAE,CAC5DI,IAAI,CAAEC,QAAQ,IAAK;QACrBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC;;QAG7B;QACA,IAAIK,QAAQ,CAACL,IAAI,CAACQ,MAAM,KAAK,WAAW,EAAE;UACzC,MAAMZ,OAAO,GAAGS,QAAQ,CAACL,IAAI,CAACS,KAAK,CAACC,GAAG;UAGvCtB,KAAK,CAACuB,GAAG,CAAG,2CAA0CX,IAAI,CAACC,KAAM,IAAGD,IAAI,CAACE,MAAO,IAAGf,KAAK,CAACyB,SAAU,EAAC,CAAC,CACpGR,IAAI,CAAEC,QAAQ,IAAK;YAClBQ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClDH,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACjB,OAAO,CAAC,CAAC;YAC9DkB,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,CAAC,CACCC,KAAK,CAAEC,KAAK,IAAK;YAChBf,OAAO,CAACC,GAAG,CAACc,KAAK,CAACC,OAAO,CAAC;UAC5B,CAAC,CAAC;QACN;MACF,CAAC,CAAC,CAECF,KAAK,CAAEC,KAAK,IAAK;QAChBf,OAAO,CAACC,GAAG,CAACc,KAAK,CAACC,OAAO,CAAC;MAC5B,CAAC,CAAC;MAEFjC,KAAK,CAACkC,OAAO,CAAC,2BAA2B,CAAC;IACxC,CAAC;IAEDC,OAAOA,CAACH,KAAK,EAAE;MACbf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;IACpB,CAAC;IACDI,OAAOA,CAAA,EAAG;MACRR,MAAM,CAACC,QAAQ,CAACQ,IAAI,GAAG,wBAAwB;IACjD;EACF,CAAC;EACDC,iBAAiB,EAAE,CACjB,QAAQ,EACR,UAAU,EACV,gBAAgB,EAChB,aAAa,EACb,KAAK;AAET,CAAC;AAED,eAAerC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}